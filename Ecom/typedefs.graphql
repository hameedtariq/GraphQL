type Query {
    products(filter: ProductsFilterInput): [Product!]!
    product(id: ID!): Product
    categories: [Category!]!
    category(id: ID!): Category
}

type Product {
    id: ID!
    name: String!
    description: String!
    quantity: Int!
    price: Float!
    onSale: Boolean!
    image: String!
    category: Category
    reviews: [Review!]!
}

type Category {
    id: ID!
    name: String!
    products: [Product!]!
}

type Review {
    id: ID!
    date: String!
    title: String!
    comment: String!
    rating: Int!
}

input ProductsFilterInput {
    onSale: Boolean
    avgRating: Int
}

type Mutation {
    addCategory(input: AddCategoryInput!): Category!
    addProduct(input: AddProductInput!): Product!
    addReview(input: AddReviewInput!): Review!
    deleteCategory(id: ID!): Category!
    updateCategory(id: ID!, input: UpdateCategoryInput!): Category!
}

input AddCategoryInput {
    name: String!
}

input UpdateCategoryInput {
    name: String!
}

input AddProductInput {
    name: String!
    description: String!
    quantity: Int!
    price: Float!
    onSale: Boolean!
    image: String!
    categoryId: ID!
}

input AddReviewInput {
    productId: ID!
    title: String!
    comment: String!
    rating: Int!
}